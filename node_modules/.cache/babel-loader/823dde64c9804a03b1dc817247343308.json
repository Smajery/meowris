{"ast":null,"code":"var _jsxFileName = \"/Users/alexander/Desktop/myStudy/client/src/pages/ItemPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from \"react-redux\";\nimport { useActions } from \"../hooks/useActions\";\nimport ItemRating from \"../components/ItemPage/ItemRating\";\nimport imgSticker from \"../img/sticker.svg\";\nimport { fetchSelectedMemory, setMemory, setMemoryImg } from \"../http/memoriesAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItemPage = () => {\n  _s();\n  const {\n    selectedMemory\n  } = useSelector(state => state.memoryReducer);\n  const {\n    setSelectedMemory,\n    setSelectedMemoryName,\n    setSelectedMemoryDescription\n  } = useActions();\n  useEffect(() => {\n    fetchSelectedMemory(Number(localStorage.getItem('itemId'))).then(data => setSelectedMemory(data));\n  }, []);\n  const [fileValue, setFileValue] = useState(null);\n  const [isEdit, setIsEdit] = useState(false);\n  const handleSubmitForm = e => {\n    e.preventDefault();\n    setMemoryImg(fileValue[0]).then(data => {\n      const memory = {\n        title: selectedMemory.title,\n        description: selectedMemory.description,\n        rating: selectedMemory.rating,\n        img: data.url,\n        categoryId: Number(localStorage.getItem('categoryId'))\n      };\n      setMemory(selectedMemory.id, memory).then(data => setSelectedMemory(data));\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"item-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item-card\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmitForm,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-card__content-top\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content-top__img\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: selectedMemory.img,\n              alt: selectedMemory.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \".jpg, .jpeg, .png, .gif\",\n              onChange: e => setFileValue(e.target.files)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-card__content-bottom\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content-bottom__text\",\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: selectedMemory.title,\n              onChange: e => setSelectedMemoryName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"description\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"description__title\",\n              children: \"\\u041E\\u043F\\u0438\\u0448\\u0456\\u0442\\u044C \\u0432\\u0430\\u0448 \\u0441\\u043F\\u043E\\u0433\\u0430\\u0434:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              placeholder: \"Meow..\",\n              value: selectedMemory.description,\n              onChange: e => setSelectedMemoryDescription(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content-bottom__rating\",\n            children: /*#__PURE__*/_jsxDEV(ItemRating, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), isEdit ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btn-edit-box\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-edit\",\n              type: \"submit\",\n              onClick: () => setIsEdit(false),\n              children: \"\\u041F\\u0456\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btn-edit-box\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-edit\",\n              type: \"submit\",\n              onClick: () => setIsEdit(true),\n              children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0443\\u0432\\u0430\\u0442\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"left-sticker\",\n            src: imgSticker,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"right-sticker\",\n            src: imgSticker,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(ItemPage, \"brtS3Fg/+GiU3hjJiCUjAZpSiRQ=\", false, function () {\n  return [useSelector, useActions];\n});\n_c = ItemPage;\nexport default ItemPage;\nvar _c;\n$RefreshReg$(_c, \"ItemPage\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","useActions","ItemRating","imgSticker","fetchSelectedMemory","setMemory","setMemoryImg","ItemPage","selectedMemory","state","memoryReducer","setSelectedMemory","setSelectedMemoryName","setSelectedMemoryDescription","Number","localStorage","getItem","then","data","fileValue","setFileValue","isEdit","setIsEdit","handleSubmitForm","e","preventDefault","memory","title","description","rating","img","url","categoryId","id","name","target","files","value"],"sources":["/Users/alexander/Desktop/myStudy/client/src/pages/ItemPage.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {useSelector} from \"react-redux\";\nimport {useActions} from \"../hooks/useActions\";\nimport ItemRating from \"../components/ItemPage/ItemRating\";\nimport imgSticker from \"../img/sticker.svg\";\nimport {fetchSelectedMemory, setMemory, setMemoryImg} from \"../http/memoriesAPI\";\n\n\nconst ItemPage = () => {\n    const {selectedMemory} = useSelector(state => state.memoryReducer)\n    const {\n        setSelectedMemory,\n        setSelectedMemoryName,\n        setSelectedMemoryDescription\n    } = useActions()\n\n    useEffect(() => {\n        fetchSelectedMemory(Number(localStorage.getItem('itemId'))).then(data => setSelectedMemory(data))\n    }, [])\n\n    const [fileValue, setFileValue] = useState(null)\n    const [isEdit, setIsEdit] = useState(false)\n\n    const handleSubmitForm = (e) => {\n        e.preventDefault()\n        setMemoryImg(fileValue[0]).then(data => {\n            const memory = {\n                title: selectedMemory.title,\n                description: selectedMemory.description,\n                rating: selectedMemory.rating,\n                img: data.url,\n                categoryId: Number(localStorage.getItem('categoryId'))\n            }\n            setMemory(selectedMemory.id, memory).then(data => setSelectedMemory(data))\n        })\n    }\n\n    return (\n        <div className='item-page'>\n            <div className='item-card'>\n                <form onSubmit={handleSubmitForm}>\n                    <div className='item-card__content-top'>\n                        <div className='content-top__img'>\n                            <img\n                                src={selectedMemory.img}\n                                alt={selectedMemory.name}\n                            />\n                            <input\n                                type='file'\n                                accept=\".jpg, .jpeg, .png, .gif\"\n                                onChange={e => setFileValue(e.target.files)}\n                            />\n                        </div>\n                    </div>\n                    <div className='item-card__content-bottom'>\n                        <div className='content-bottom__text'>\n                            <textarea\n                                value={selectedMemory.title}\n                                onChange={e => setSelectedMemoryName(e.target.value)}\n                            />\n                        </div>\n                        <div className='description'>\n                            <p className='description__title'>\n                                Опишіть ваш спогад:\n                            </p>\n                            <textarea\n                                placeholder='Meow..'\n                                value={selectedMemory.description}\n                                onChange={e => setSelectedMemoryDescription(e.target.value)}\n                            />\n                        </div>\n                        <div className='content-bottom__rating'>\n                            <ItemRating/>\n                        </div>\n                        {isEdit\n                            ?\n                            <div className='btn-edit-box'>\n                                <button\n                                    className='btn-edit'\n                                    type='submit'\n                                    onClick={() => setIsEdit(false)}\n                                >\n                                    Підтвердити\n                                </button>\n                            </div>\n                            :\n                            <div className='btn-edit-box'>\n                                <button\n                                    className='btn-edit'\n                                    type='submit'\n                                    onClick={() => setIsEdit(true)}\n                                >\n                                    Редактувати\n                                </button>\n                            </div>\n                        }\n                    </div>\n                    <div>\n                        <img className='left-sticker' src={imgSticker} alt=''/>\n                    </div>\n                    <div>\n                        <img className='right-sticker' src={imgSticker} alt=''/>\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default ItemPage;"],"mappings":"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"},"metadata":{},"sourceType":"module"}