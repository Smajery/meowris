{"ast":null,"code":"var _jsxFileName = \"/Users/alexander/Desktop/myStudy/client/src/components/LoginPage/LoginForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useActions } from \"../../hooks/useActions\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ROUTE_MEMORY } from \"../../utils/consts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    singIn,\n    logIn\n  } = useActions();\n  const [emailValue, setEmailValue] = useState('');\n  const [passwordValue, setPasswordValue] = useState('');\n  const [haveAccount, setHaveAccount] = useState(false);\n  const handleSubmitForm = e => {\n    e.preventDefault();\n    if (haveAccount) {\n      logIn(emailValue, passwordValue).then();\n      navigate(ROUTE_MEMORY);\n    } else {\n      singIn(emailValue, passwordValue);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmitForm,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        type: \"text\",\n        autoComplete: \"on\",\n        value: emailValue,\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0456\\u0442\\u044C \\u0441\\u0432\\u0456\\u0439 email\",\n        onChange: e => setEmailValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        type: \"password\",\n        autoComplete: \"on\",\n        value: passwordValue,\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0456\\u0442\\u044C \\u0441\\u0432\\u0456\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n        onChange: e => setPasswordValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-box\",\n        children: [haveAccount ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-box__text\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u041D\\u0435\\u043C\\u0430\\u0454 \\u043E\\u0431\\u043B\\u0456\\u043A\\u043E\\u0432\\u043E\\u0433\\u043E \\u0437\\u0430\\u043F\\u0438\\u0441\\u0443?\", /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => setHaveAccount(false),\n              children: \"\\u0417\\u0430\\u0440\\u0435\\u0454\\u0441\\u0442\\u0440\\u0443\\u0439\\u0442\\u0435\\u0441\\u044C!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-box__text\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u0423 \\u0432\\u0430\\u0441 \\u0432\\u0436\\u0435 \\u0454 \\u043E\\u0431\\u043B\\u0456\\u043A\\u043E\\u0432\\u0438\\u0439 \\u0437\\u0430\\u043F\\u0438\\u0441?\", /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => setHaveAccount(true),\n              children: \"\\u0423\\u0432\\u0456\\u0439\\u0434\\u0456\\u0442\\u044C!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), haveAccount ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"\\u0423\\u0432\\u0456\\u0439\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"\\u0417\\u0430\\u0440\\u0435\\u0454\\u0441\\u0442\\u0440\\u0443\\u0439\\u0442\\u0435\\u0441\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginForm, \"IOZ6z+odniQo1SjN/EN5hinh5Vs=\", false, function () {\n  return [useNavigate, useActions];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","useActions","useNavigate","ROUTE_MEMORY","LoginForm","navigate","singIn","logIn","emailValue","setEmailValue","passwordValue","setPasswordValue","haveAccount","setHaveAccount","handleSubmitForm","e","preventDefault","then","target","value"],"sources":["/Users/alexander/Desktop/myStudy/client/src/components/LoginPage/LoginForm.jsx"],"sourcesContent":["import React, {useState} from 'react';\nimport {useActions} from \"../../hooks/useActions\";\nimport {useNavigate} from \"react-router-dom\";\nimport {ROUTE_MEMORY} from \"../../utils/consts\";\n\nconst LoginForm = () => {\n    const navigate = useNavigate()\n    const {singIn, logIn} = useActions()\n\n    const [emailValue, setEmailValue] = useState('')\n    const [passwordValue, setPasswordValue] = useState('')\n    const [haveAccount, setHaveAccount] = useState(false)\n\n    const handleSubmitForm = (e) => {\n        e.preventDefault()\n        if(haveAccount) {\n            logIn(emailValue, passwordValue).then()\n            navigate(ROUTE_MEMORY)\n        } else {\n            singIn(emailValue, passwordValue)\n        }\n    }\n\n    return (\n        <div className='login-form'>\n            <form onSubmit={handleSubmitForm}>\n                <input\n                    required\n                    type='text'\n                    autoComplete='on'\n                    value={emailValue}\n                    placeholder='Введіть свій email'\n                    onChange={e => setEmailValue(e.target.value)}\n                />\n                <input\n                    required\n                    type='password'\n                    autoComplete='on'\n                    value={passwordValue}\n                    placeholder='Введіть свій пароль'\n                    onChange={e => setPasswordValue(e.target.value)}\n                />\n                <div className='btn-box'>\n                    {haveAccount\n                        ?\n                        <div className='btn-box__text'>\n                            <p>Немає облікового запису?\n                                <span onClick={() => setHaveAccount(false)}>\n                                    Зареєструйтесь!\n                                </span>\n                            </p>\n                        </div>\n                        :\n                        <div className='btn-box__text'>\n                            <p>У вас вже є обліковий запис?\n                                <span onClick={() => setHaveAccount(true)}>\n                                    Увійдіть!\n                                </span>\n                            </p>\n                        </div>\n                    }\n                    {haveAccount\n                        ?\n                        <button type='submit'>Увійти</button>\n                        :\n                        <button type='submit'>Зареєструйтесь</button>\n                    }\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default LoginForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAAQC,UAAU,QAAO,wBAAwB;AACjD,SAAQC,WAAW,QAAO,kBAAkB;AAC5C,SAAQC,YAAY,QAAO,oBAAoB;AAAC;AAEhD,MAAMC,SAAS,GAAG,MAAM;EAAA;EACpB,MAAMC,QAAQ,GAAGH,WAAW,EAAE;EAC9B,MAAM;IAACI,MAAM;IAAEC;EAAK,CAAC,GAAGN,UAAU,EAAE;EAEpC,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMc,gBAAgB,GAAIC,CAAC,IAAK;IAC5BA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAGJ,WAAW,EAAE;MACZL,KAAK,CAACC,UAAU,EAAEE,aAAa,CAAC,CAACO,IAAI,EAAE;MACvCZ,QAAQ,CAACF,YAAY,CAAC;IAC1B,CAAC,MAAM;MACHG,MAAM,CAACE,UAAU,EAAEE,aAAa,CAAC;IACrC;EACJ,CAAC;EAED,oBACI;IAAK,SAAS,EAAC,YAAY;IAAA,uBACvB;MAAM,QAAQ,EAAEI,gBAAiB;MAAA,wBAC7B;QACI,QAAQ;QACR,IAAI,EAAC,MAAM;QACX,YAAY,EAAC,IAAI;QACjB,KAAK,EAAEN,UAAW;QAClB,WAAW,EAAC,2EAAoB;QAChC,QAAQ,EAAEO,CAAC,IAAIN,aAAa,CAACM,CAAC,CAACG,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAC/C,eACF;QACI,QAAQ;QACR,IAAI,EAAC,UAAU;QACf,YAAY,EAAC,IAAI;QACjB,KAAK,EAAET,aAAc;QACrB,WAAW,EAAC,0GAAqB;QACjC,QAAQ,EAAEK,CAAC,IAAIJ,gBAAgB,CAACI,CAAC,CAACG,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAClD,eACF;QAAK,SAAS,EAAC,SAAS;QAAA,WACnBP,WAAW,gBAER;UAAK,SAAS,EAAC,eAAe;UAAA,uBAC1B;YAAA,6JACI;cAAM,OAAO,EAAE,MAAMC,cAAc,CAAC,KAAK,CAAE;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAEpC;UAAA;YAAA;YAAA;YAAA;UAAA;QACP;UAAA;UAAA;UAAA;QAAA,QACF,gBAEN;UAAK,SAAS,EAAC,eAAe;UAAA,uBAC1B;YAAA,sKACI;cAAM,OAAO,EAAE,MAAMA,cAAc,CAAC,IAAI,CAAE;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAEnC;UAAA;YAAA;YAAA;YAAA;UAAA;QACP;UAAA;UAAA;UAAA;QAAA,QACF,EAETD,WAAW,gBAER;UAAQ,IAAI,EAAC,QAAQ;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAgB,gBAErC;UAAQ,IAAI,EAAC,QAAQ;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAwB;MAAA;QAAA;QAAA;QAAA;MAAA,QAE/C;IAAA;MAAA;MAAA;MAAA;IAAA;EACH;IAAA;IAAA;IAAA;EAAA,QACL;AAEd,CAAC;AAAC,GAlEIR,SAAS;EAAA,QACMF,WAAW,EACJD,UAAU;AAAA;AAAA,KAFhCG,SAAS;AAoEf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module"}