{"ast":null,"code":"import { authSlice } from \"./AuthSlice\";\nimport { login, registration } from \"../../../http/userAPI\";\nexport const AuthActionCreator = {\n  setIsAuth: isAuth => dispatch => {\n    dispatch(authSlice.actions.setIsAuth(isAuth));\n  },\n  setUser: user => dispatch => {\n    dispatch(authSlice.actions.setUser(user));\n  },\n  setIsError: boolean => dispatch => {\n    dispatch(authSlice.actions.setIsError(boolean));\n  },\n  singIn: (email, password) => dispatch => {\n    try {\n      registration(email, password).then(() => {\n        dispatch(AuthActionCreator.setIsError(true));\n        dispatch(authSlice.actions.setRegMessage('Вітаємо, ви зареєструвалися!'));\n      });\n      registration(email, password).catch(error => {\n        dispatch(AuthActionCreator.setIsError(true));\n        dispatch(authSlice.actions.setRegMessage(error.response.data.message));\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  },\n  logIn: (email, password) => dispatch => {\n    try {\n      login(email, password).then(user => {\n        dispatch(AuthActionCreator.setUser(user));\n        localStorage.setItem('user', JSON.stringify(user));\n        dispatch(authSlice.actions.setIsError(false));\n        dispatch(AuthActionCreator.setIsAuth(true));\n        localStorage.setItem('auth', JSON.stringify(true));\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  },\n  logOut: () => dispatch => {\n    try {\n      dispatch(AuthActionCreator.setUser({}));\n      localStorage.removeItem('user');\n      localStorage.removeItem('token');\n      localStorage.removeItem('auth');\n      dispatch(AuthActionCreator.setIsAuth(false));\n    } catch (e) {\n      console.log(e);\n    }\n  }\n};","map":{"version":3,"names":["authSlice","login","registration","AuthActionCreator","setIsAuth","isAuth","dispatch","actions","setUser","user","setIsError","boolean","singIn","email","password","then","setRegMessage","catch","error","response","data","message","e","console","log","logIn","localStorage","setItem","JSON","stringify","logOut","removeItem"],"sources":["/Users/alexander/Desktop/myStudy/client/src/store/reducers/auth/action-creator.js"],"sourcesContent":["import {authSlice} from \"./AuthSlice\";\nimport {login, registration} from \"../../../http/userAPI\";\n\nexport const AuthActionCreator = {\n    setIsAuth: (isAuth) => dispatch => {\n        dispatch(authSlice.actions.setIsAuth(isAuth))\n    },\n    setUser: (user) => dispatch => {\n        dispatch(authSlice.actions.setUser(user))\n    },\n    setIsError: (boolean) => dispatch => {\n        dispatch(authSlice.actions.setIsError(boolean))\n    },\n    singIn: (email, password) => dispatch => {\n        try {\n            registration(email, password).then(() => {\n                dispatch(AuthActionCreator.setIsError(true))\n                dispatch(authSlice.actions.setRegMessage('Вітаємо, ви зареєструвалися!'))\n            })\n            registration(email, password).catch(error => {\n                dispatch(AuthActionCreator.setIsError(true))\n                dispatch(authSlice.actions.setRegMessage(error.response.data.message))\n            })\n        } catch (e) {\n            console.log(e)\n        }\n    },\n    logIn: (email, password) => dispatch => {\n        try {\n            login(email, password).then(user => {\n                dispatch(AuthActionCreator.setUser(user))\n                localStorage.setItem('user', JSON.stringify(user))\n                dispatch(authSlice.actions.setIsError(false))\n                dispatch(AuthActionCreator.setIsAuth(true))\n                localStorage.setItem('auth', JSON.stringify(true))\n            })\n        } catch (e) {\n            console.log(e)\n        }\n    },\n    logOut: () => dispatch => {\n        try {\n            dispatch(AuthActionCreator.setUser({}))\n            localStorage.removeItem('user')\n            localStorage.removeItem('token')\n            localStorage.removeItem('auth')\n            dispatch(AuthActionCreator.setIsAuth(false))\n        } catch (e) {\n            console.log(e)\n        }\n    }\n}"],"mappings":"AAAA,SAAQA,SAAS,QAAO,aAAa;AACrC,SAAQC,KAAK,EAAEC,YAAY,QAAO,uBAAuB;AAEzD,OAAO,MAAMC,iBAAiB,GAAG;EAC7BC,SAAS,EAAGC,MAAM,IAAKC,QAAQ,IAAI;IAC/BA,QAAQ,CAACN,SAAS,CAACO,OAAO,CAACH,SAAS,CAACC,MAAM,CAAC,CAAC;EACjD,CAAC;EACDG,OAAO,EAAGC,IAAI,IAAKH,QAAQ,IAAI;IAC3BA,QAAQ,CAACN,SAAS,CAACO,OAAO,CAACC,OAAO,CAACC,IAAI,CAAC,CAAC;EAC7C,CAAC;EACDC,UAAU,EAAGC,OAAO,IAAKL,QAAQ,IAAI;IACjCA,QAAQ,CAACN,SAAS,CAACO,OAAO,CAACG,UAAU,CAACC,OAAO,CAAC,CAAC;EACnD,CAAC;EACDC,MAAM,EAAE,CAACC,KAAK,EAAEC,QAAQ,KAAKR,QAAQ,IAAI;IACrC,IAAI;MACAJ,YAAY,CAACW,KAAK,EAAEC,QAAQ,CAAC,CAACC,IAAI,CAAC,MAAM;QACrCT,QAAQ,CAACH,iBAAiB,CAACO,UAAU,CAAC,IAAI,CAAC,CAAC;QAC5CJ,QAAQ,CAACN,SAAS,CAACO,OAAO,CAACS,aAAa,CAAC,8BAA8B,CAAC,CAAC;MAC7E,CAAC,CAAC;MACFd,YAAY,CAACW,KAAK,EAAEC,QAAQ,CAAC,CAACG,KAAK,CAACC,KAAK,IAAI;QACzCZ,QAAQ,CAACH,iBAAiB,CAACO,UAAU,CAAC,IAAI,CAAC,CAAC;QAC5CJ,QAAQ,CAACN,SAAS,CAACO,OAAO,CAACS,aAAa,CAACE,KAAK,CAACC,QAAQ,CAACC,IAAI,CAACC,OAAO,CAAC,CAAC;MAC1E,CAAC,CAAC;IACN,CAAC,CAAC,OAAOC,CAAC,EAAE;MACRC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;IAClB;EACJ,CAAC;EACDG,KAAK,EAAE,CAACZ,KAAK,EAAEC,QAAQ,KAAKR,QAAQ,IAAI;IACpC,IAAI;MACAL,KAAK,CAACY,KAAK,EAAEC,QAAQ,CAAC,CAACC,IAAI,CAACN,IAAI,IAAI;QAChCH,QAAQ,CAACH,iBAAiB,CAACK,OAAO,CAACC,IAAI,CAAC,CAAC;QACzCiB,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACpB,IAAI,CAAC,CAAC;QAClDH,QAAQ,CAACN,SAAS,CAACO,OAAO,CAACG,UAAU,CAAC,KAAK,CAAC,CAAC;QAC7CJ,QAAQ,CAACH,iBAAiB,CAACC,SAAS,CAAC,IAAI,CAAC,CAAC;QAC3CsB,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAAC,CAAC;MACtD,CAAC,CAAC;IACN,CAAC,CAAC,OAAOP,CAAC,EAAE;MACRC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;IAClB;EACJ,CAAC;EACDQ,MAAM,EAAE,MAAMxB,QAAQ,IAAI;IACtB,IAAI;MACAA,QAAQ,CAACH,iBAAiB,CAACK,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;MACvCkB,YAAY,CAACK,UAAU,CAAC,MAAM,CAAC;MAC/BL,YAAY,CAACK,UAAU,CAAC,OAAO,CAAC;MAChCL,YAAY,CAACK,UAAU,CAAC,MAAM,CAAC;MAC/BzB,QAAQ,CAACH,iBAAiB,CAACC,SAAS,CAAC,KAAK,CAAC,CAAC;IAChD,CAAC,CAAC,OAAOkB,CAAC,EAAE;MACRC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;IAClB;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"module"}