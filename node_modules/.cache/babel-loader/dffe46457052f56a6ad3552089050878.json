{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  categories: [],\n  memories: [],\n  selectedMemories: [],\n  selectedCategory: {},\n  options: [{\n    name: 'За назвою',\n    value: 'name'\n  }, {\n    name: 'За спаданням',\n    value: 'ratingDown'\n  }, {\n    name: 'За зростанням',\n    value: 'ratingUp'\n  }],\n  selectedSort: '',\n  selectedCategoryItem: {},\n  isLoading: false,\n  isCategoryNameModal: false,\n  isMemoryCardModal: false,\n  page: 1\n};\nexport const memorySlice = createSlice({\n  name: 'memory',\n  initialState,\n  reducers: {\n    setCategories(state, action) {\n      state.categories = action.payload;\n    },\n    addCategory(state, action) {\n      state.categories = [...state.categories, action.payload];\n    },\n    removeCategory(state, action) {\n      state.categories = state.categories.filter(category => category.id !== action.payload);\n      state.selectedCategory = {};\n    },\n    setMemories(state, action) {\n      state.memories = action.payload;\n    },\n    setSelectedMemories(state, action) {\n      state.selectedMemories = action.payload;\n    },\n    addMemory(state, action) {\n      state.selectedMemories = [...state.selectedMemories, action.payload];\n    },\n    setIsLoading(state, action) {\n      state.isLoading = action.payload;\n    },\n    setSelectedCategory(state, action) {\n      state.selectedCategory = action.payload;\n    },\n    setSelectedCategoryName(state, action) {\n      state.selectedCategory.name = action.payload;\n    },\n    setSelectedCategoryItemName(state, action) {\n      state.selectedCategoryItem.name = action.payload;\n      for (let i = 0; i < state.categoryItems.length; i++) {\n        if (state.categoryItems[i].id === state.selectedCategoryItem.id) {\n          state.categoryItems[i].name = action.payload;\n        }\n      }\n    },\n    setSelectedCategoryItemDescription(state, action) {\n      state.selectedCategoryItem.description = action.payload;\n      for (let i = 0; i < state.categoryItems.length; i++) {\n        if (state.categoryItems[i].id === state.selectedCategoryItem.id) {\n          state.categoryItems[i].description = action.payload;\n        }\n      }\n    },\n    setSelectedCategoryItemRating(state, action) {\n      state.selectedCategoryItem.rating = action.payload;\n      for (let i = 0; i < state.categoryItems.length; i++) {\n        if (state.categoryItems[i].id === state.selectedCategoryItem.id) {\n          state.categoryItems[i].rating = action.payload;\n        }\n      }\n    },\n    setSelectedCategoryItemImg(state, action) {\n      state.selectedCategoryItem.img = action.payload;\n      for (let i = 0; i < state.categoryItems.length; i++) {\n        if (state.categoryItems[i].id === state.selectedCategoryItem.id) {\n          state.categoryItems[i].img = action.payload;\n        }\n      }\n    },\n    setCategoryName(state, action) {\n      for (let i = 0; i < state.categories.length; i++) {\n        if (state.categories[i].id === state.selectedCategory.id) {\n          state.categories[i].name = action.payload;\n        }\n      }\n    },\n    setSelectedSort(state, action) {\n      state.selectedSort = action.payload;\n    },\n    setSelectedCategoryItem(state, action) {\n      state.selectedCategoryItem = action.payload;\n    },\n    setIsCategoryNameModal(state, action) {\n      state.isCategoryNameModal = action.payload;\n    },\n    setIsMemoryCardModal(state, action) {\n      state.isMemoryCardModal = action.payload;\n    },\n    addItemInCategory(state, action) {\n      state.categoryItems = [...state.categoryItems, action.payload];\n    },\n    removeItemInCategory(state, action) {\n      state.categoryItems = state.categoryItems.filter(item => item.id !== action.payload);\n    },\n    sortSelectedCategoryItems(state, action) {\n      if (action.payload === 'name') {\n        state.selectedCategoryItems = state.selectedCategoryItems.sort((a, b) => a['name'].localeCompare(b['name']));\n      }\n      if (action.payload === 'ratingDown') {\n        state.selectedCategoryItems = state.selectedCategoryItems.sort((a, b) => b['rating'] - a['rating']);\n      }\n      if (action.payload === 'ratingUp') {\n        state.selectedCategoryItems = state.selectedCategoryItems.sort((a, b) => a['rating'] - b['rating']);\n      }\n    }\n  }\n});\nexport default memorySlice.reducer;","map":{"version":3,"names":["createSlice","initialState","categories","memories","selectedMemories","selectedCategory","options","name","value","selectedSort","selectedCategoryItem","isLoading","isCategoryNameModal","isMemoryCardModal","page","memorySlice","reducers","setCategories","state","action","payload","addCategory","removeCategory","filter","category","id","setMemories","setSelectedMemories","addMemory","setIsLoading","setSelectedCategory","setSelectedCategoryName","setSelectedCategoryItemName","i","categoryItems","length","setSelectedCategoryItemDescription","description","setSelectedCategoryItemRating","rating","setSelectedCategoryItemImg","img","setCategoryName","setSelectedSort","setSelectedCategoryItem","setIsCategoryNameModal","setIsMemoryCardModal","addItemInCategory","removeItemInCategory","item","sortSelectedCategoryItems","selectedCategoryItems","sort","a","b","localeCompare","reducer"],"sources":["/Users/alexander/Desktop/myStudy/client/src/store/reducers/memory/MemorySlice.js"],"sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    categories: [],\n    memories: [],\n    selectedMemories: [],\n    selectedCategory: {},\n    options: [\n        {name: 'За назвою', value: 'name'},\n        {name: 'За спаданням', value: 'ratingDown'},\n        {name: 'За зростанням', value: 'ratingUp'},\n    ],\n    selectedSort: '',\n    selectedCategoryItem: {},\n    isLoading: false,\n    isCategoryNameModal: false,\n    isMemoryCardModal: false,\n    page: 1,\n    \n}\nexport const memorySlice = createSlice({\n    name: 'memory',\n    initialState,\n    reducers: {\n        setCategories(state, action) {\n          state.categories = action.payload\n        },\n        addCategory(state, action) {\n            state.categories = [...state.categories, action.payload]\n        },\n        removeCategory(state, action) {\n            state.categories = state.categories.filter(category => category.id !== action.payload)\n            state.selectedCategory = {}\n        },\n\n        setMemories(state, action) {\n            state.memories = action.payload\n        },\n        setSelectedMemories(state, action) {\n            state.selectedMemories = action.payload\n        },\n        addMemory(state, action) {\n            state.selectedMemories = [...state.selectedMemories, action.payload]\n        },\n\n        setIsLoading(state, action) {\n            state.isLoading = action.payload\n        },\n\n\n        setSelectedCategory(state, action) {\n            state.selectedCategory = action.payload\n        },\n        setSelectedCategoryName(state, action) {\n            state.selectedCategory.name = action.payload\n        },\n        setSelectedCategoryItemName(state, action) {\n            state.selectedCategoryItem.name = action.payload\n            for(let i = 0; i < state.categoryItems.length; i++ ) {\n                if (state.categoryItems[i].id === state.selectedCategoryItem.id) {\n                    state.categoryItems[i].name = action.payload\n                }\n            }\n        },\n        setSelectedCategoryItemDescription(state, action) {\n            state.selectedCategoryItem.description = action.payload\n            for(let i = 0; i < state.categoryItems.length; i++ ) {\n                if (state.categoryItems[i].id === state.selectedCategoryItem.id) {\n                    state.categoryItems[i].description = action.payload\n                }\n            }\n        },\n        setSelectedCategoryItemRating(state, action) {\n            state.selectedCategoryItem.rating = action.payload\n            for(let i = 0; i < state.categoryItems.length; i++ ) {\n                if (state.categoryItems[i].id === state.selectedCategoryItem.id) {\n                    state.categoryItems[i].rating = action.payload\n                }\n            }\n        },\n        setSelectedCategoryItemImg(state, action) {\n            state.selectedCategoryItem.img = action.payload\n            for (let i = 0; i < state.categoryItems.length; i++){\n                if(state.categoryItems[i].id === state.selectedCategoryItem.id){\n                    state.categoryItems[i].img = action.payload\n                }\n            }\n        },\n        setCategoryName(state, action) {\n            for (let i = 0; i < state.categories.length; i++) {\n                if (state.categories[i].id === state.selectedCategory.id) {\n                    state.categories[i].name = action.payload\n                }\n            }\n        },\n        setSelectedSort(state, action) {\n            state.selectedSort = action.payload\n        },\n        setSelectedCategoryItem(state, action) {\n            state.selectedCategoryItem = action.payload\n        },\n\n        setIsCategoryNameModal(state, action) {\n            state.isCategoryNameModal = action.payload\n        },\n        setIsMemoryCardModal(state, action) {\n            state.isMemoryCardModal = action.payload\n        },\n\n        addItemInCategory(state, action) {\n            state.categoryItems = [...state.categoryItems, action.payload]\n        },\n        removeItemInCategory(state, action) {\n            state.categoryItems = state.categoryItems.filter(item => item.id !== action.payload)\n        },\n        sortSelectedCategoryItems(state, action) {\n            if(action.payload === 'name'){\n                state.selectedCategoryItems = state.selectedCategoryItems.sort((a, b) => a['name'].localeCompare(b['name']))\n            }\n            if(action.payload === 'ratingDown'){\n                state.selectedCategoryItems = state.selectedCategoryItems.sort((a, b) => b['rating'] - a['rating'])\n            }\n            if(action.payload === 'ratingUp'){\n                state.selectedCategoryItems = state.selectedCategoryItems.sort((a, b) => a['rating'] - b['rating'])\n            }\n        }\n    }\n})\nexport default memorySlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module"}